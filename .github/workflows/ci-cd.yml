name: Django Project CI/CD

on:
  push:
    branches: [ main ]
  
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    services:
      postgres:
        image: postgres
        env:
          NAME: ${{ secrets.POSTGRE_DB_NAME }}
          USER: ${{ secrets. POSTGRE_USERNAME}}
          PASSWORD: ${{ secrets.POSTGRE_PASSWORD }}
          HOST: ${{ secrets.POSTGRE_HOSTNAME }}
          PORT: ${{ secrets.POSTGRE_PORT }}
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Cache dependency on Linux
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache Dependency on Mac OS
      uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache Dependency on Windows
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run:  |
        python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run:  |
        python -m pip install --upgrade pip
        pip install flake8 pycodestyle pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run:  |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Coverage report
      run:  |
        coverage run --omit='*/migrations/*','*/.virtualenvs/*','*/__init__.py','manage.py' manage.py test
        coverage report
    - name: Django Testing
      run:  |
        python3 manage.py test
    - name: Test with pytest
      run:  |
        pytest